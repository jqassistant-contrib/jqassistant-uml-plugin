<jqassistant-rules
        xmlns="http://schema.jqassistant.org/rule/v1.8"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://schema.jqassistant.org/rule/v1.8 https://schema.jqassistant.org/rule/jqassistant-rule-v1.8.xsd">

    <group id="xmi:UMLDefault">
        <includeConcept refId="xmi:UML*"/>
    </group>

    <concept id="xmi:UMLPackage">
        <description>Labels all UML elements of type "uml:Package" with "Package".</description>
        <cypher><![CDATA[
		MATCH
		  (package:UML:Element{xmiType:"uml:Package"})
		SET
		  package:Package
		RETURN
		  count(package) as Packages
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLComponent">
        <description>Labels all UML elements of type "uml:Component" with "Component".</description>
        <cypher><![CDATA[
		MATCH
		  (component:UML:Element{xmiType:"uml:Component"})
		SET
		  component:Component
		RETURN
		  count(component) as Components
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLProperty">
        <description>Labels all UML elements of type "uml:Property" with "Property".</description>
        <cypher><![CDATA[
		MATCH
		  (property:UML:Element{xmiType:"uml:Property"})
		SET
		  property:Property
		RETURN
		  count(property) as Properties
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLPort">
        <description>Labels all UML elements of type "uml:Port" with "Port".</description>
        <cypher><![CDATA[
		MATCH
		  (port:UML:Element{xmiType:"uml:Port"})
		SET
		  port:Port
		RETURN
		  count(port) as Ports
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLAssociation">
        <description>Labels all UML elements of type "uml:Association" with "Association".</description>
        <cypher><![CDATA[
		MATCH
		  (association:UML:Element{xmiType:"uml:Association"})
		SET
		  association:Association
		RETURN
		  count(association) as Associations
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLDependency">
        <description>Labels all UML elements of type "uml:Dependency" with "Dependency" and creates a "HAS_DEPENDENCY" relation between the client and supplier elements.</description>
        <cypher><![CDATA[
		MATCH
		  (dependency:UML:Element{xmiType:"uml:Dependency"})
		SET
		  dependency:Dependency
		WITH
		  dependency
		MATCH
		  (dependency)-[:HAS_CLIENT]->(client:UML:Element),
		  (dependency)-[:HAS_SUPPLIER]->(supplier:UML:Element)
		MERGE
		  (client)-[:HAS_DEPENDENCY]->(supplier)
		RETURN
		  count(dependency) as Dependencies
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLUsage">
        <description>Labels all UML elements of type "uml:Usage" with "Usage" and creates a "USES" relation between the client and supplier elements.</description>
        <cypher><![CDATA[
		MATCH
		  (usage:UML:Element{xmiType:"uml:Usage"})
		SET
		  usage:Usage
		WITH
		  usage
		MATCH
		  (usage)-[:HAS_CLIENT]->(client:UML:Element),
		  (usage)-[:HAS_SUPPLIER]->(supplier:UML:Element)
		MERGE
		  (client)-[:USES]->(supplier)
		RETURN
		  count(usage) as Usages
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLProvidesInterface">
        <description>Creates a relation "PROVIDES_INTERFACE" between UML elements and their provided interfaces.</description>
        <cypher><![CDATA[
		MATCH
		  (element:UML:Element)-[:HAS_CHILD]->(provided:UML:Interface:Provided)
		MERGE
		  (element)-[providesInterface:PROVIDES_INTERFACE]->(provided)
		RETURN
		  count(providesInterface) as ProvidesInterfaces
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

    <concept id="xmi:UMLRequiresInterface">
        <description>Creates a relation "REQUIRES_INTERFACE" between UML elements and their required interfaces.</description>
        <cypher><![CDATA[
		MATCH
		  (element:UML:Element)-[:HAS_CHILD]->(required:UML:Interface:Required)
		MERGE
		  (element)-[requiresInterface:REQUIRES_INTERFACE]->(required)
		RETURN
		  count(requiresInterface) as RequiresInterfaces
   		]]>
        </cypher>
        <verify>
            <aggregation/>
        </verify>
    </concept>

</jqassistant-rules>